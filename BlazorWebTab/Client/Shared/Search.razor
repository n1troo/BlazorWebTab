@using System.Collections.Specialized
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<div class="input-group">
    <input @bind-value="_searchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearch"
           class="form-control"
           placeholder="Search.."
           @ref="SearchInput"/>
    <datalist id="products">
        @foreach (var suggestion in _suggestions)
        {
            <option>@suggestion</option>
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>

@code {
    private string _searchText = string.Empty;
    private List<string> _suggestions = new List<string>();
    protected ElementReference SearchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await SearchInput.FocusAsync();
        }
    }

    private void SearchProducts()
    {
        NavigationManager.NavigateTo($"search/{_searchText}");
    }

    public async Task HandleSearch(KeyboardEventArgs keyboardEventArgs)
    {
        if (keyboardEventArgs.Key != null)
        {
            if (keyboardEventArgs.Key.Equals("Backspace") && _searchText.Length == 0)
            {
                NavigationManager.NavigateTo($"/");
            }
            else if (keyboardEventArgs.Key.Equals("Enter"))
            {
                SearchProducts();
            }
            else
            {
                if (_searchText.Length > 1)
                {
                    _suggestions = await ProductService.GetProductSearchSuggestions(_searchText);
                }
            }
        }
        else
        {
            if (keyboardEventArgs.Key == null && _suggestions.Count > 0)
            {
                SearchProducts();
            }
        }
    }

}