@page "/product/{ProductId:int}"

@inject IProductService ProductService
@inject NavigationManager NavigationManager

@if (product != null)
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title"/>
        </div>
        <div class="accordion-body">
            <h4 class="mb-0">@product.Title</h4>
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">
                        $@GetSelectedVariant().OriginalPrice
                    </h6>
                }
                <h4 class="price">
                    $@GetSelectedVariant().Price
                </h4>
            }
            <a href="/product/"></a>
        </div>

        <div class="btn btn-primary" @onclick="Back">Back to list</div>
    </div>
}
else
{
    <span>@message...</span>
}

@code {

    [Parameter]
    public int ProductId { get; set; }

    private Product? product;
    private string message = "Loading product";
    private int _currentTypeId = 1;

    protected override async Task OnParametersSetAsync()
    {
        var result = await ProductService.GetproductById(ProductId);
        if (result.Success)
        {
            product = result.Data;
            if (product != null && product.Variants.Count > 0)
            {
                _currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
        else
        {
            message = result.Message;
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        return product.Variants.FirstOrDefault(v => v.ProductTypeId == _currentTypeId);
    }

    public void Back()
    {
        NavigationManager.NavigateTo("/");
    }

}